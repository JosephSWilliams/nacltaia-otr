nacltaia-otr:
  provides authenticated and encrypted messages
  and protects recepients from forgeries and
  replay attacks through the protocol of IRC in
  a chroot environment.

  the chosen primitives for PM are:

  taia64 + curve25519xsalsa20poly1305 + base91a

  the selected primitives provide authenticated,
  encrypted messages from a sender (seckey), to
  a receiver (pubkey). the protocol protects
  receivers from forgeries and replay attacks.

  the chosen primitives for CHAT are:

  taia64 + crypto_secretbox_xsalsa20poly1305 + base91a

  the selected primitives provide authenticated,
  encrypted messages for senders to receivers
  with a shared seckey. the protocol protects
  receivers from forgeries and replay attacks.

  IMHO PM/CHAT messages are usually between 0 and 128
  bytes length. nacltaia-otr automatically pads each
  message in 128 byte blocks. in example, the messages
  "Hi, :-)" and "How are you?" will result in the same
  size 128 byte ciphertext. messages greater than 128
  bytes will be padded to meet the full 128 byte block.
  the tradeoff here is a small additional overhead for
  considerably stronger security.

  IRC messages may often contain binary encoding. this
  can allow an attacker to tamper with internal
  mechanisms in some IRC clients, often without the
  user's knowledge. in worst cases it can even allow
  an attacker to execute arbitrary code on the victim's
  machine. nacltaia-otr automatically purges all binary
  encoding before it makes it to the IRC client.

depends:
  python(>=2.6), python-dev(>=2.6), nacl, libtai,
  gcc, sh

recommends:
  cython(>=0.17.3), ucspi-tcp, urcd

todo:
  create base91a.c, fixes for intel (x86_64)

intel install (x86_64):
  # will complain about PIC for libtai.a

  cd /usr/local/src/libtai-*
  sed 's/gcc /gcc -fPIC /' conf-* -i

  make

  cp libtai.a /usr/lib/libtai.a
  cp *.h /usr/include/

  cd $OLDPWD

  useradd nacltaia-otr

  # python2.6
  sed 's/cython/nocython/g' Make.sh | sh

  # python2.7
  sed 's/cython/nocython/g' Make.sh | sed 's/\.6/.7/g' | sh

  mkdir -p crypto/
  mkdir -p crypto/dstkey/
  mkdir -p crypto/chnkey/

  ./keypair < /dev/urandom

  printf $pubkey > crypto/pubkey
  printf $seckey > crypto/seckey

install:

  useradd nacltaia-otr

  # python2.6
  ./Make.sh

  # python2.7
  sed 's/\.6/.7/g' Make.sh | sh

  mkdir -p crypto/
  mkdir -p crypto/dstkey/
  mkdir -p crypto/chnkey/

  ./keypair < /dev/urandom

  printf $pubkey > crypto/pubkey
  printf $seckey > crypto/seckey

adding crypto:
  # [security] $nick should be lowercase

  printf $pubkey > crypto/dstkey/$nick

  # [security] $channel should be lowercase
  # with no hashtag. $nick should be
  # lowercase

  printf $pubkey > crypto/dstkey/$nick
  printf $seckey > crypto/chnkey/$channel

urcd:
  # from cwd of urcd

  ln -s /path/to/nacltaia-otr/stdin `pwd`/stdin
  ln -s /path/to/nacltaia-otr/stdout `pwd`/stdout
  ln -s /path/to/nacltaia-otr/crypto `pwd`/crypto
  ln -s /path/to/nacltaia-otr/nacltaia.so `pwd`/nacltaia.so

  # base91a.py for non-cython
  ln -s /path/to/nacltaia-otr/base91a.so `pwd`/base91a.so

ucspi-tcp:
  tcpserver 127.0.0.1 6667 tcpclient irc.crypto.net 6667 ./stdio &
  irssi -c 127.0.0.1
